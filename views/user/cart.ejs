<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Full-Screen Food Order Cart</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body, html {
            height: 100%;
            font-family: Arial, sans-serif;
            background-color: #f9f9f9;
        }

        .container-wrapper {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }

        .cart-container {
            display: flex;
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            width: 90%;
            max-width: 1500px;
            gap: 40px;
        }

        .product-section {
            flex: 3;
            padding-right: 20px;
            border-right: 1px solid #eaeaea;
        }

        .product-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 0;
            border-bottom: 1px solid #eaeaea;
            gap: 20px;
        }

        .product-item:last-child {
            border-bottom: none;
        }

        .product-details {
            display: flex;
            align-items: center;
            flex: 1;
            gap: 15px;
        }

        .product-item img {
            width: 80px;
            height: 80px;
            border-radius: 5px;
        }

        .product-name {
            font-size: 18px;
            color: #333;
            flex: 1;
        }

        .quantity-selector {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 5px;
        }

        .quantity-selector button {
            background-color: #fc5000;
            color: #fff;
            border: none;
            width: 30px;
            height: 30px;
            cursor: pointer;
            font-size: 18px;
            border-radius: 4px;
            transition: background-color 0.3s;
        }

        .quantity-selector button:hover {
            background-color: #e24600;
        }

        .quantity-selector input {
            width: 40px;
            text-align: center;
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 2px;
            font-size: 14px;
        }

        .summary-section {
            flex: 1.5;
        }

        .summary {
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .summary h3 {
            color: #fc5000;
            margin-bottom: 20px;
            text-align: center;
            font-size: 20px;
            border-bottom: 2px solid #fc5000;
            padding-bottom: 5px;
        }

        .summary-item {
            display: flex;
            justify-content: space-between;
            margin: 15px 0;
            font-size: 16px;
        }

        .summary-item strong {
            font-size: 18px;
        }

        .checkout-btn {
            width: 100%;
            background-color: #fc5000;
            color: #fff;
            border: none;
            padding: 15px;
            font-size: 18px;
            cursor: pointer;
            border-radius: 6px;
            margin-top: 20px;
            transition: background-color 0.3s ease;
            font-weight: bold;
        }

        .checkout-btn:hover {
            background-color: #e24600;
        }

        .item-total-price {
            display: flex;
            align-items: center;
            justify-content: center;
            flex: 1;
            margin-left: 10px; /* Adjusted for minimum distance */
            gap: 10px; /* Added consistent gap */
        }

        .delete-icon {
            width: 20px;
            height: 20px;
            cursor: pointer;
        }

        .delete-icon:hover {
            opacity: 0.7;
        }
    </style>
</head>
<body>
    <div class="container-wrapper">
        <div class="cart-container">
            <div class="product-section">
                <% if (cart && cart.length > 0) { %>
                    <% cart.forEach(item => { %>
                        <div class="product-item" data-item-id="<%= item.cartItems.itemId %>">
                            <div class="product-details">
                                <img src="<%= item.itemDetails.image[0] %>" alt="<%= item.itemDetails.item %>">
                                <span class="product-name"><%= item.itemDetails.item %></span>
                            </div>
                            <div class="quantity-selector">
                                <button class="decrease-qty" data-item-id="<%= item.cartItems.itemId %>">-</button>
                                <input type="text" class="quantity-input" value="<%= item.cartItems.quantity %>" data-item-id="<%= item.cartItems.itemId %>" readonly>
                                <button class="increase-qty" data-item-id="<%= item.cartItems.itemId %>">+</button>
                            </div>
                            <div class="item-total-price">
                                <span>S$<%= (item.itemDetails.price * item.cartItems.quantity).toFixed(2) %></span>
                                <i class="fas fa-trash delete-icon" data-item-id="<%= item.cartItems.itemId %>"></i>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <p>Your cart is empty.</p>
                <% } %>
            </div>

            <div class="summary-section">
                <div class="summary">
                    <h3>Order Summary</h3>
                    <div class="summary-item">
                        <span>Subtotal</span>
                        <span class="subtotal">S$<%= cart.reduce((sum, item) => sum + (item.itemDetails.price * item.cartItems.quantity), 0).toFixed(2) %></span>
                    </div>
                    <div class="summary-item">
                        <span>Shipping</span>
                        <span>Free</span>
                    </div>
                    <div class="summary-item">
                        <strong>Total</strong>
                        <strong class="total">S$<%= cart.reduce((sum, item) => sum + (item.itemDetails.price * item.cartItems.quantity), 0).toFixed(2) %></strong>
                    </div>
                    <button class="checkout-btn">Checkout</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        const userId = '<%= userId %>';

        function updateCartUI(itemId, newQuantity, itemPrice) {
            const itemElement = $(`.product-item[data-item-id="${itemId}"]`);
            const quantityInput = itemElement.find('.quantity-input');
            const itemTotalPrice = itemElement.find('.item-total-price');

            // Update quantity input and item total price
            quantityInput.val(newQuantity);
            itemTotalPrice.find('span').html(`S$${(itemPrice).toFixed(2)}`);

            // Update subtotal and total
            let newSubtotal = 0;
            $('.item-total-price span').each(function() {
                newSubtotal += parseFloat($(this).text().replace('S$', '').trim());
            });

            // Update the displayed subtotal and total
            $('.subtotal').text(`S$${newSubtotal.toFixed(2)}`);
            $('.total').text(`S$${newSubtotal.toFixed(2)}`);
        }

        $(document).on('click', '.increase-qty, .decrease-qty', function() {
            const itemId = $(this).data('item-id');
            const action = $(this).hasClass('increase-qty') ? 'increase' : 'decrease';

            const quantityInput = $(`.product-item[data-item-id="${itemId}"] .quantity-input`);
            let currentQuantity = parseInt(quantityInput.val(), 10);
            let newQuantity = action === 'increase' ? currentQuantity + 1 : currentQuantity - 1;

            if (newQuantity < 1) {
                newQuantity = 1;
            }

            $.ajax({
                url: '/api/update-cart',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ itemId, action, userId }),
                success: function(data) {
                    if (data.success) {
                        const { newQuantity, itemPrice } = data; // Assuming API returns new quantity and updated price
                        updateCartUI(itemId, newQuantity, itemPrice);
                    } else {
                        console.error('Error:', data.message);
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error updating quantity:', error);
                }
            });
        });

        $(document).on('click', '.delete-icon', function() {
            const itemId = $(this).data('item-id');

            $.ajax({
                url: '/api/remove-from-cart',
                method: 'DELETE',
                contentType: 'application/json',
                data: JSON.stringify({ itemId, userId }),
                success: function(data) {
                    if (data.success) {
                        $(`.product-item[data-item-id="${itemId}"]`).remove(); // Remove item from UI
                        // Update subtotal and total accordingly
                        updateCartSummary();
                    } else {
                        console.error('Error:', data.message);
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error removing item:', error);
                }
            });
        });

        function updateCartSummary() {
            let newSubtotal = 0;
            $('.item-total-price span').each(function() {
                newSubtotal += parseFloat($(this).text().replace('S$', '').trim());
            });

            // Update displayed subtotal and total
            $('.subtotal').text(`S$${newSubtotal.toFixed(2)}`);
            $('.total').text(`S$${newSubtotal.toFixed(2)}`);
        }
    </script>
</body>
</html>
