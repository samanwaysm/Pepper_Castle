<!DOCTYPE html>
<html lang="en-US">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pepper Castle</title>
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com/">
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400;0,700;1,400;1,700&amp;family=Work+Sans:wght@300;400;500;600;700&amp;display=swap"
        rel="stylesheet">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/owl-carousel/1.3.3/owl.carousel.min.css">
    <link rel='stylesheet' id='bootstrap-css' href='css/bootstrap/css/bootstrap.min.css' type='text/css' media='all' />
    <!-- Font Awesome Icons CSS -->
    <link rel='stylesheet' id='font-awesome' href='css/fontawesome/css/font-awesome.min.css' type='text/css'
        media='all' />
    <!-- Owl Carousel -->
    <link rel='stylesheet' id='owl-carousel' href='js/owl-carousel/owl.carousel.min.css' type='text/css' media='all' />
    <!-- Main CSS File -->
    <link rel='stylesheet' id='caverta-style-css' href='/css/style.css' type='text/css' media='all' />
    <!-- favicons -->
    <link rel='stylesheet' id='caverta-style-css' href='/css/checkout.css' type='text/css' media='all' />
    <link rel="icon" href="/images/fav.png" sizes="32x32" />
    <link rel="icon" href="/images/icons/favicon-192x192.png" sizes="192x192" />
    <link rel="apple-touch-icon-precomposed" href="/images/icons/favicon-180x180.png" />
    <!-- <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha384-k6RqeWeci5ZR/Lv4MR0sA0FfDOMcXy8cM4lFpbpVg5gRZxY2t+GdA1sNFA1Y+" crossorigin="anonymous"> -->

</head>

<body class="home">
    <div class="menu-mask"></div>
    <!-- MOBILE MENU HOLDER -->
    <div class="mobile-menu-holder">
        <div class="modal-menu-container">
            <div class="exit-mobile">
                <span class="icon-bar1"></span>
                <span class="icon-bar2"></span>
            </div>
            <!-- MOBILE MENU -->
            <ul class="menu-mobile">
                <li class="menu-item menu-item-has-children">
                    <a href="/">Home</a>
                </li>
                <li class="menu-item menu-item-has-children">
                    <a href="/about">About</a>
                </li>
                <li class="menu-item menu-item-has-children">
                    <a href="/testimonials">Testimonials</a>
                </li>
                <li class="menu-item menu-item-has-children current-menu-item">
                    <a href="/our-menu">Our Menu</a>
                </li>
                <li class="menu-item menu-item-has-children">
                    <a href="/contact">Contact</a>
                </li>
                <li class="menu-item menu-item-has-children">
                    <a href="/signup">Sign Up</a>
                </li>
                <li class="menu-item menu-item-has-children">
                    <a href="/cart"><i class="fas fa-cart-plus"></i></a>
                </li>
            </ul>
            <!-- /MOBILE MENU -->
        </div>
        <!-- modal-menu-container -->
        <div class="menu-contact">
            <div class="mobile-btn">
                <a href="#" class="view-more">Order Now</a>
            </div>
            <ul class="mobile-contact">
                <li class="mobile-address">58 Ralph Ave<br />
                    New York, New York 1111
                </li>
                <li class="mobile-phone">+1 800 000 111</li>
                <li class="mobile-email"><a href="#" class="__cf_email__"
                        data-cfemail="01626e6f75606275416479606c716d642f626e6c">[email&#160;protected]</a></li>
            </ul>
            <ul class="social-media">
                <li><a class="social-facebook" href="#" target="_blank"><i class="fab fa-facebook-f"></i></a></li>
                <li><a class="social-instagram" href="https://www.instagram.com/pepper_castle_/?igshid=eddejyohhgwd"
                        target="_blank"><i class="fab fa-instagram"></i></a></li>
            </ul>
        </div>
        <!-- /menu-contact-->
    </div>
    <!-- /MOBILE MENU HOLDER -->
    <!-- HEADER -->
    <header id="header-1" class="headerHolder header-1 nav-fixed-top-cart">
        <div class="nav-button-holder">
            <button type="button" class="nav-button">
                <span class="icon-bar"></span>
            </button>
        </div>
        <!-- /nav-button-holder-->
        <!-- LOGO -->
        <div class="logo logo-1"><a href="/"><img class="img-fluid" src="/images/Pepper-Castle_White.png"
                    alt="Caverta" /></a></div>
        <!-- MENU -->
        <nav class="nav-holder nav-holder-1">
            <ul class="menu-nav menu-nav-1">
                <li class="menu-item menu-item-has-children">
                    <a href="/">Home</a>
                </li>
                <li class="menu-item menu-item-has-children">
                    <a href="/about">About</a>
                </li>
                <li class="menu-item menu-item-has-children">
                    <a href="/testimonials">Testimonials</a>
                </li>
                <li class="menu-item menu-item-has-children current-menu-item">
                    <a href="/our-menu">Our Menu</a>
                </li>
                <li class="menu-item menu-item-has-children">
                    <a href="/contact">Contact</a>
                </li>
            </ul>
        </nav>
        <!-- /MENU -->
        <div class="social-btn-top1">
            <% if(!isUserAuth){ %>
                <ul class="social-media social-media1 login-signup">
                    <li class="menu-item menu-item-has-children">
                        <!-- <a href="/signin">SignIn</a> -->
                    </li>
                </ul>
                <% }else{ %>
                    <ul class=" menu-nav menu-nav-1"></ul>
                    <li class="menu-item menu-item-has-children list-unstyled" style="margin-left: 50px;">
                        <a class="icon-link-white" href="/profile"><i class="fas fa-user"></i></a>
                    </li>
                    <li class="menu-item menu-item-has-children list-unstyled"
                        style="margin-left: 30px;margin-right: 30px;">
                        <a class="icon-link-white" href="/cart"><i class="fas fa-cart-plus" id="cartIcon"></i></a>
                    </li>
                    </ul>
                    <% } %>
                        <% if(!isUserAuth){ %>
                            <div class="btn-header btn-header1 profile-cart-btns">
                                <a href="/signin" class="view-more">Order Now</a>
                            </div>
                            <% }else{ %>
                                <div class="btn-header btn-header1 profile-cart-btns">
                                    <a href="/our-menu" class="view-more">Order Now</a>
                                </div>
                                <% } %>
        </div>
        <!-- /social-btn-top1 -->
    </header>

    <div class="container-chk mx-auto p-6">
        <div class="checkout">
            <h2>Checkout</h2>
        </div>
        <div class="checkout-container">
            <!-- Address Section -->
            <!-- <div class="address-section section">
                <h2>Address</h2>
                <div class="address-box">
                    <strong><%#= address.username %></strong><br>
                    <%#= address.structuredAddress %>
                </div>
                <button class="change-address" id="changeAddressBtn">Change Address</button>
            </div> -->
            <div class="address-section section">
                <h2>Address</h2>
                <div class="address-box" id="currentAddress">
                    <strong>
                        <%= address.username %>
                    </strong><br>
                    <%= address.structuredAddress %>
                </div>
                <button class="change-address" id="changeAddressBtn">Change Address</button>
            </div>

            <!-- Order Summary Section -->
            <div class="summary-section section">
                <div class="summary">
                    <h3>Order Summary</h3>
                    <div class="summary-item">
                        <span>Subtotal</span>
                        <span class="subtotal">S$<%= cartDetails.reduce((sum, item)=> sum + (item.itemDetails.price *
                                item.cartItems.quantity), 0).toFixed(2) %></span>
                    </div>
                    <div class="summary-item">
                        <span>Shipping</span>
                        <span>Free</span>
                    </div>
                    <div class="summary-item">
                        <strong>Total</strong>
                        <strong class="total">S$<%= cartDetails.reduce((total, item)=> total +
                                (item.itemDetails.price * item.cartItems.quantity), 0).toFixed(2) %></strong>
                    </div>
                </div>
            </div>

            <!-- Payment Section -->
            <div class="payment-section section">
                <h2>Payment</h2>
                <label><input type="radio" name="paymentMethod" value="online"> Online Payment</label>
                <label><input type="radio" name="paymentMethod" value="cod"> Cash on Delivery</label>
                <button type="submit" class="place-order-btn" onclick="checkDeliveryArea()">Place Your Order</button>
            </div>
        </div>
    </div>

    <!-- Modal -->

    <!-- Change Address Modal -->
    <div id="changeAddressModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Select Address</h4>
                <span id="closeModal" class="close">&times;</span>
            </div>
            <div class="address-list" id="addressList">
            </div>
            <button id="addAddressBtn" class="btn addaddress-btn">Add Address</button>
        </div>
    </div>

    <!-- Add Address Modal -->
    <div id="addAddressModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Add New Address</h4>
                <span id="closeAddModal" class="close">&times;</span>
            </div>
            <div class="form-control">
                <input type="text" id="username" placeholder="Username">
            </div>
            <div class="form-control">
                <input type="text" id="phone" placeholder="Phone">
            </div>
            <div class="form-control">
                <input type="text" id="street" placeholder="Street">
            </div>
            <div class="form-control">
                <input type="text" id="block" placeholder="Block">
            </div>
            <div class="form-control">
                <input type="text" id="unitnum" placeholder="Unit Number">
            </div>
            <div class="form-control">
                <input type="text" id="postal" placeholder="Postal Code">
            </div>
            <button id="saveAddressBtn" class="btn saveaddress-btn">Save Address</button>
        </div>
    </div>

    <!-- Modal Structure for Editing Address -->
    <div id="editAddressModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Edit Address</h4>
                <span id="closeEditModal" class="close">&times;</span>
            </div>
            <div class="modal-body">
                <form id="editAddressForm">
                    <input type="hidden" id="editAddressId">
                    <div class="form-control-edit">
                        <label>Username:</label>
                        <input type="text" id="editUsername" required>
                    </div>
                    <div class="form-control-edit">
                        <label>Phone:</label>
                        <input type="text" id="editPhone" required>
                    </div>
                    <div class="form-control-edit">
                        <label>Street:</label>
                        <input type="text" id="editStreet" required>
                    </div>
                    <div class="form-control-edit">
                        <label>Block:</label>
                        <input type="text" id="editBlock" required>
                    </div>
                    <div class="form-control-edit">
                        <label>Unit Number:</label>
                        <input type="text" id="editUnitNum" required>
                    </div>
                    <div class="form-control-edit">
                        <label>Postal Code:</label>
                        <input type="number" id="editPostal" required>
                    </div>
                    <button id="editAddressBtn" class="btn saveaddress-btn">Save Changes</button>
                </form>
            </div>
        </div>
    </div>


    <!-- FOOTER -->
    <footer>
        <div class="container">
            <div class="footer-widgets">
                <div class="row">
                    <!-- FOOTER COLUMN 1 -->
                    <div class="col-md-4">
                        <div class="foo-block">
                            <div id="text-2" class="widget widget-footer widget_text">
                                <div class="textwidget">
                                    <p><img class="size-full wp-image-665" src="/images/Pepper-Castle_White.png" alt=""
                                            width="250" height="51"></p>
                                    <p>We offer such food connoisseurs the very best of North Indian cuisine that is
                                        healthy, tasty, and free from additives.</p>
                                </div>
                            </div>
                        </div>
                        <!--foo-block-->
                    </div>
                    <!--col-md-3-->
                    <!-- FOOTER COLUMN 2 -->
                    <div class="col-md-3">
                        <div class="foo-block">
                            <div id="text-3" class="widget widget-footer widget_text">
                                <h5 class="widgettitle"><span>Address</span></h5>
                                <div class="textwidget">
                                    <p>33 Lorong liput<br> 277744 Singapore
                                    </p>
                                    <p style="white-space: nowrap;"><i class="fas fa-phone-alt"></i>+65 97440747<br>
                                        <i class="fas fa-envelope"></i><a href="#">peppercastle@hotmail.com</a>
                                    </p>
                                </div>
                            </div>
                        </div>
                        <!--foo-block-->
                    </div>
                    <!--col-md-3-->

                    <div class="col-md-3">
                        <div class="foo-block foo-last">
                            <div id="text-5" class="widget widget-footer widget_text">
                                <h5 class="widgettitle"><span>Quick Links</span></h5>
                                <div class="textwidget ftr-menu">
                                    <ul>
                                        <li><a href="/">- Home</a></li>
                                        <li><a href="/about">- About</a></li>
                                        <li><a href="/testimonials">- Testimonials</a></li>
                                        <li><a href="/our-menu">- Our Menu</a></li>
                                        <li><a href="/contact">- Contact</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <!--foo-block-->
                    </div>
                    <!-- FOOTER COLUMN 3 -->
                    <div class="col-md-2">
                        <div class="foo-block">
                            <div id="text-4" class="widget widget-footer widget_text">
                                <h5 class="widgettitle"><span>Hours</span></h5>
                                <div class="textwidget">
                                    <p style="white-space: nowrap;">Monday – Sunday<br>
                                        11:00 AM - 11:00 PM
                                    </p>
                                </div>
                                <ul class="footer-social">
                                    <li><a class="social-facebook" href="#" target="_blank"><i
                                                class="fab fa-facebook-f"></i></a></li>
                                    <li><a class="social-instagram"
                                            href="https://www.instagram.com/pepper_castle_/?igshid=eddejyohhgwd"
                                            target="_blank"><i class="fab fa-instagram"></i></a></li>
                                </ul>
                            </div>
                        </div>
                        <!--foo-block-->
                    </div>
                    <!--col-md-3-->
                    <!-- FOOTER COLUMN 4 -->

                    <!--col-md-3-->
                </div>
                <!--row-->
            </div>
            <!-- footer-widgets -->
            <div class="copyright">
                <!-- COPYRIGHT -->
                <div class="footer-copy">
                    <p>© 2023 - Pepper Castle. All Rights Reserved.</p>
                </div>
                <!-- SOCIAL ICONS -->

            </div>
            <!--copyright-->
        </div>
        <!--container-->
    </footer>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>

        window.onload = getLocation;

        // Function to get user's location
        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(success, error);
            } else {
                alert("Geolocation is not supported by this browser.")
            }
        }

        // Success callback
        function success(position) {
            const latitude = position.coords.latitude;
            const longitude = position.coords.longitude;
            console.log(latitude, longitude);

            // Store the user's location in session (optional)
            sessionStorage.setItem('latitude', latitude);
            sessionStorage.setItem('longitude', longitude);
        }

        // Error callback
        function error(err) {
            switch (err.code) {
                case err.PERMISSION_DENIED:
                    document.getElementById('locationDisplay').textContent = "User denied the request for Geolocation.";
                    break;
                case err.POSITION_UNAVAILABLE:
                    document.getElementById('locationDisplay').textContent = "Location information is unavailable.";
                    break;
                case err.TIMEOUT:
                    document.getElementById('locationDisplay').textContent = "The request to get user location timed out.";
                    break;
                case err.UNKNOWN_ERROR:
                    document.getElementById('locationDisplay').textContent = "An unknown error occurred.";
                    break;
            }
        }

        // Function to check delivery area before submitting order
        function checkDeliveryArea() {
            const latitude = sessionStorage.getItem('latitude');
            const longitude = sessionStorage.getItem('longitude');

            if (latitude && longitude) {
                $.ajax({
                    url: '/api/getLocationDetails',
                    method: 'POST',
                    data: { latitude, longitude },
                    success: function (response) {
                        console.log(response);
                        
                        if (response) {
                            console.log(response);
                            
                            submitOrder(); // Call submitOrder only if delivery is available
                        } else {
                            console.log(response);
                            alert('Delivery is not available in your area.');
                        }
                    },
                    error: function () {
                        console.error("Error while checking delivery area");
                    }
                });
            } else {
                alert('Unable to retrieve your location. Please enable location services.');
            }
        }

        $(document).ready(function () {
            updateCartCount();
        });
        function updateCartCount() {
            const userId = `<%= userId %>`;  // Make sure userId is defined here
            if (!userId) {
                console.error("userId is not defined!");
                return;
            }

            $.ajax({
                url: '/api/itemCount',
                method: 'GET',
                data: { userId: userId },
                success: function (response) {
                    console.log("Cart Count Response:", response);
                    cartCountDisplay(response.cartItemCount);  // Pass the cart item count directly
                },
                error: function () {
                    console.error("Error fetching cart count");
                }
            });
        }

        function cartCountDisplay(cartItemCount) {
            const cartIcon = document.getElementById('cartIcon');

            // Remove any existing counter to avoid duplication
            const existingCounter = cartIcon.querySelector('span');
            if (existingCounter) {
                cartIcon.removeChild(existingCounter);
            }

              const counter = document.createElement('span');
         counter.classList.add('cart-counter'); // Apply the CSS class for styling
         counter.textContent = cartItemCount;  // Use the count returned from the server  // Use the count returned from the server

            // Append the counter to the cart icon
            cartIcon.appendChild(counter);
        }
        function updateCartCount() {
            const userId = `<%= userId %>`;  // Make sure userId is defined here
            if (!userId) {
                console.error("userId is not defined!");
                return;
            }

            $.ajax({
                url: '/api/itemCount',
                method: 'GET',
                data: { userId: userId },
                success: function (response) {
                    console.log("Cart Count Response:", response);
                    cartCountDisplay(response.cartItemCount);  // Pass the cart item count directly
                },
                error: function () {
                    console.error("Error fetching cart count");
                }
            });
        }
        function cartCountDisplay(cartItemCount) {
            const cartIcon = document.getElementById('cartIcon');

            // Remove any existing counter to avoid duplication
            const existingCounter = cartIcon.querySelector('span');
            if (existingCounter) {
                cartIcon.removeChild(existingCounter);
            }

            // // Create a new span element for the cart count
            // const counter = document.createElement('span');
            // counter.style.position = 'absolute';
            // counter.style.borderRadius = '50%';
            // counter.style.backgroundColor = 'var(--headings-color)';
            // counter.style.width = '14px';
            // counter.style.height = '14px';
            // counter.style.top = '20px';
            // // counter.style.right = '0'; 
            // counter.style.textAlign = 'center';
            // counter.style.lineHeight = '15px';
            // counter.style.fontSize = '10px';
            // counter.style.color = '#fff';
            // counter.textContent = cartItemCount;  // Use the count returned from the server

            const counter = document.createElement('span');
            counter.classList.add('cart-counter'); // Apply the CSS class for styling
            counter.textContent = cartItemCount;  // Use the count returned from the server

            // Append the counter to the cart icon
            cartIcon.appendChild(counter);
        }

        // Get userId from the server-side template
        const userId = `<%= userId %>`; // Assuming this is passed from your backend

        // Function to open modals
        function openModal(modalId) {
            document.getElementById(modalId).style.display = 'flex';
        }

        // Function to close modals
        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }

        // Open the modal to change address and fetch addresses via AJAX
        document.getElementById("changeAddressBtn").onclick = function () {
            openModal('changeAddressModal');
            fetchAddresses();
        }

        // Close modals on close button click
        document.getElementById("closeModal").onclick = function () {
            closeModal('changeAddressModal');
        }
        document.getElementById("closeAddModal").onclick = function () {
            closeModal('addAddressModal');
        }

        // Fetch addresses using AJAX and render them
        function fetchAddresses() {
            const addressList = document.getElementById("addressList");
            addressList.innerHTML = 'Loading...';

            fetch(`/api/showAddress?userId=${userId}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data.isDefault);
                    addressList.innerHTML = '';
                    if (data.length === 0) {
                        addressList.innerHTML = 'No addresses found.';
                    } else {
                        data.forEach((address, index) => {
                            addressList.innerHTML += `
                                <div class="address-item" id="address-item-${index}">
                                    <label>
                                        <input type="radio" name="selectedAddress" 
                                            value="${index}" 
                                            ${address.isDefault ? 'checked' : ''} 
                                            onchange="updateDefaultAddress('${address._id}')">                                        
                                        <div>
                                            <span>${address.structuredAddress}</span>
                                        </div>
                                    </label>
                                    <div class="icons">
                                        <i class="fas fa-edit" onclick="editAddress('${address._id}')" title="Edit Address"></i>
                                        <i class="fas fa-trash-alt" onclick="deleteAddress('${address._id}','${index}')" title="Delete Address"></i>
                                    </div>
                                </div>

                            `;
                        });
                    }
                })
                .catch(error => console.error('Error fetching addresses:', error));
        }

        // Open modal to add a new address
        document.getElementById("addAddressBtn").onclick = function () {
            openModal('addAddressModal');
        }



        // Save address using AJAX
        document.getElementById("saveAddressBtn").onclick = function () {
            const username = document.getElementById("username").value;
            const phone = document.getElementById("phone").value;
            const street = document.getElementById("street").value;
            const block = document.getElementById("block").value;
            const unitnum = document.getElementById("unitnum").value;
            const postal = document.getElementById("postal").value;

            // Send the new address data via AJAX
            const data = { userId, username, phone, street, block, unitnum, postal }; // Include userId

            fetch(`/api/addAddress?userId=${userId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then(response => response.json())
                .then(result => {
                    // alert('Address added successfully!');
                    closeModal('addAddressModal');
                    fetchAddresses();  // Refresh address list
                })
                .catch(error => console.error('Error adding address:', error));
        }

        // Edit address function
        function editAddress(index) {
            // Implement AJAX call to edit the address by index
            const newAddress = prompt('Edit address:'); // Get updated address details
            if (newAddress) {
                // Send an AJAX request to update the address
                fetch(`/api/editAddress`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ userId, index, newAddress }) // Include userId
                })
                    .then(response => response.json())
                    .then(result => {
                        // alert('Address updated successfully!');
                        fetchAddresses(); // Refresh address list
                    })
                    .catch(error => console.error('Error updating address:', error));
            }
        }

        // Delete address function
        function deleteAddress(addressId, index) {
            const userId = `<%= userId %>`;
            console.log('delete-', index);

            $.ajax({
                url: `/api/deleteAddress?userId=${userId}`,
                method: 'DELETE',
                data: { addressId: addressId },
                success: function (response) {
                    // alert("Address deleted successfully.");
                    const addressElement = document.getElementById(`address-item-${index}`);

                    // Check if the element exists before attempting to remove
                    if (addressElement) {
                        console.log(`Element found, deleting: address-item-${index}`);
                        addressElement.remove();  // Remove the item from DOM
                    } else {
                        console.log(`Element not found: address-item-${index}`);
                    }
                },
                error: function (err) {
                    console.error(err);
                    // alert("Failed to delete the address.");
                }
            });
        }

        function updateDefaultAddress(addressId) {
            const userId = `<%= userId %>`;
            $.ajax({
                type: 'POST',
                url: '/api/updateDefaultAddress',
                data: {
                    userId: userId,
                    addressId: addressId
                },
                success: function (response) {
                    // Handle success response
                    closeModal('changeAddressModal');
                    fetchDefaultAddress();
                    // console.log('Default address updated successfully:', response);
                },
                error: function (xhr, status, error) {
                    // Handle error response
                    console.error('Error updating default address:', error);
                }
            });
        }

        function fetchDefaultAddress() {
            const userId = '<%= userId %>';
            fetch(`/api/showDefaultAddress?userId=${userId}`)
                .then(response => response.json())
                .then(address => {
                    document.getElementById('currentAddress').innerHTML = `
                        <strong>${address.username}</strong><br>
                        ${address.structuredAddress}
                    `;
                });
        }

        function fetchAddressData(addressId) {
            const userId = '<%= userId %>';
            $.ajax({
                url: `/api/getAddress`,
                method: 'GET',
                data: {
                    userId: userId,
                    addressId: addressId
                },
                success: function (response) {
                    document.getElementById('editAddressId').value = response._id;
                    document.getElementById('editUsername').value = response.username;
                    document.getElementById('editPhone').value = response.phone;
                    document.getElementById('editStreet').value = response.street;
                    document.getElementById('editBlock').value = response.block;
                    document.getElementById('editUnitNum').value = response.unitnum;
                    document.getElementById('editPostal').value = response.postal;

                    // Display the modal
                    document.getElementById('editAddressModal').style.display = 'flex';
                },
                error: function (err) {
                    console.error('Error fetching address data:', err);
                    // alert('Failed to load address details.');
                }
            });
        }

        function editAddress(addressId) {
            fetchAddressData(addressId);
        }

        document.getElementById("closeEditModal").onclick = function () {
            closeModal('editAddressModal');
        }

        document.getElementById("editAddressBtn").onclick = function (event) {
            event.preventDefault();

            const addressId = document.getElementById("editAddressId").value;
            const username = document.getElementById("editUsername").value;
            const phone = document.getElementById("editPhone").value;
            const street = document.getElementById("editStreet").value;
            const block = document.getElementById("editBlock").value;
            const unitnum = document.getElementById("editUnitNum").value;
            const postal = document.getElementById("editPostal").value;

            // Prepare data to send
            const updatedData = { username, phone, street, block, unitnum, postal };
            console.log(updatedData);

            // Send the new address data via AJAX
            fetch(`/api/updateAddress?userId=${userId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ addressId, updatedData }) // Fix: Use JSON.stringify
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok: ' + response.statusText);
                    }
                    return response.json();
                })
                .then(result => {
                    // alert('Address updated successfully!'); // Change message to be more accurate
                    closeModal('editAddressModal');
                    fetchAddresses();  // Refresh address list
                })
                .catch(error => console.error('Error updating address:', error));
        }

        function submitOrder() {
            const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
            const orderItems = `<%- JSON.stringify(cartDetails) %>`;
            const userId = `<%= userId %>`;
            // const structuredAddress = `<%= address.structuredAddress %>`;
            const addressId = `<%= address.addressId %>`;

            const orderData = {
                orderItems: orderItems,
                paymentMethod: paymentMethod,
                addressId: addressId,
                userId: userId
            };

            fetch('/api/create-order', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(orderData)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        if (paymentMethod === 'online') {
                            window.location.href = data.paymentUrl;
                        } else {
                            window.location.href = data.paymentUrl;
                        }
                    } else {
                        alert('Error placing order: ' + data.error);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }


    </script>

</body>

</html>